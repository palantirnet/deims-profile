<?php
/**
 * @file
 * Code for the Data Source Content Type feature.
 */

include_once 'deims_data_source.features.inc';

/**
 * Implements hook_init().
 */
function deims_data_source_init() {
  drupal_add_library('system', 'ui.dialog');
  drupal_add_js(drupal_get_path('module', 'deims_data_source') . '/js/data_source.js');
}

/**
 * Implements hook_form_alter().
 */
function deims_data_source_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'data_source_node_form') {
    // Remove the last variable since it's empty and prevents a save.
    // See: http://drupal.org/node/1239946 for more info.
    if (arg(2) == 'edit') {
      foreach ($form['field_variables'][LANGUAGE_NONE] as $key => $field) {
        if (is_numeric($key) && empty($field['label']['#default_value'])) {
          // unset($form['field_variables'][LANGUAGE_NONE][$key]);
        }
      }
    }
    // Add the data preview stuff.
    $form['box'] = array(
      '#type' => 'markup',
      '#prefix' => '<div id="source_preview">',
      '#suffix' => '</div>',
      '#markup' => '',
    );

    $form['source_preview_button'] = array(
      '#type' => 'button',
      '#ajax' => array(
        'callback' => 'deims_data_source_preview_source',
        'wrapper' => 'source_preview',
      ),
      '#value' => t('Preview Source'),
      '#limit_validation_errors' => array(),
    );
  }
}

/**
 * Generate a datatable from a given CSV source preview.
 */
function deims_data_source_preview_source($form, &$form_state) {
  $file = $header_lines = $orientation = $delimiter = FALSE;
  $errors = $commands = array();

  if (isset($form_state['values']['field_data_source_file'][LANGUAGE_NONE][0]['fid']) && !empty($form_state['values']['field_data_source_file'][LANGUAGE_NONE][0]['fid'])) {
    $file = file_load($form_state['values']['field_data_source_file'][LANGUAGE_NONE][0]['fid']);
  }
  else {
    $errors[] = '<p>Please attach or upload a <strong>file</strong>.</p>';
  }

  $delimiter_form_value = $form_state['values']['field_csv_field_delimiter'][LANGUAGE_NONE];
  if (isset($delimiter_form_value['select']) && !empty($delimiter_form_value['select'])) {
    $delimiter = ($delimiter_form_value['select'] == 'select_or_other') ?
      $delimiter_form_value['other'] : $delimiter_form_value['select'];
  }
  else {
    $errors[] = '<p>Please select a field <strong>delimiter</strong>.</p>';
  }

  if (isset($form_state['values']['field_csv_orientation'][LANGUAGE_NONE]) && !empty($form_state['values']['field_csv_orientation'][LANGUAGE_NONE])) {
    $orientation = $form_state['values']['field_csv_orientation'][LANGUAGE_NONE];
  }
  else {
    $errors[] = 'column';
  }

  $header_lines = (!empty($form_state['values']['field_csv_header_lines'][LANGUAGE_NONE][0]['value'])) ? $form_state['values']['field_csv_header_lines'][LANGUAGE_NONE][0]['value'] : 0;

  $footer_lines = (!empty($form_state['values']['field_csv_footer_lines'][LANGUAGE_NONE][0]['value'])) ? $form_state['values']['field_csv_footer_lines'][LANGUAGE_NONE][0]['value'] : 0;

  if (!empty($errors)) {
    $commands[] = ajax_command_replace('#source_preview', '<div id="source_preview">' . implode('', $errors) . '</div>');
    return array(
      '#type' => 'ajax',
      '#commands' => $commands,
    );
  }

  $csv = fopen(drupal_realpath($file->uri), 'r');
  $rows = $headers = $datatable = array();

  // The numbers of lines to show in the preview.
  $limit = variable_get('data_source_preview_limit', 100);

  $row_count = 0;
  while (($line = fgetcsv($csv, 0, $delimiter)) !== FALSE) {
    $row_count++;

    // Sanity check.
    if ($row_count <= ($limit + $header_lines)) {
      if ($orientation == 'column') {
        // Are we adding just 1 header line?
        if ($header_lines == 1 && $row_count == 1) {
          foreach ($line as $field) {
            $headers[]['data'] = $field;
          }
        }
        else {
          array_push($rows, $line);
        }
      }
      else {
        // Each new line represents data for records defined in columns.
        foreach ($line as $key => $field) {
          if ($header_lines == 1 && $key == 0) {
            $headers[]['data'] = $field;
          }
          else {
            $rows[$key][] = $field;
          }
        }
      }
    }

    // Super insanity check.
    if (($row_count - $header_lines - $footer_lines) >= $limit) {
      break;
    }
  }

  // Do we need to remove any footer lines?
  $remove = $row_count - $header_lines - $footer_lines;
  if ($remove < $limit) {
    array_splice($rows, $remove);
  }

  // Datatables can only handle 1 header row, so if we have >1 or <1, empty it.
  $datatable['header'] = (empty($headers)) ? array_fill(0, count($rows[0]), '') : $headers;
  $datatable['rows'] = $rows;

  $element = $form['box'];
  $element['#markup'] = theme_datatable($datatable);

  // $commands = array();
  $commands[] = ajax_command_replace('#source_preview', '<div id="source_preview_modal">' . render($element) . '</div>');
  $commands[] = ajax_command_invoke(NULL, 'data_source_preview_show_modal');

  return array(
    '#type' => 'ajax',
    '#commands' => $commands,
  );
}
